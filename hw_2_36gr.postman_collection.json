{
	"info": {
		"_postman_id": "8c3b2243-f193-4953-954b-ef5ab7772cbb",
		"name": "hw_2_36gr",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21091393"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1.статус код 200",
							"pm.test(\"status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"// 2. Проверить, что в body приходит правильный string",
							"var response = \"This is the first responce from server!ss\"",
							"console.log(response);",
							"pm.test(\"response body has the correct string\", function () {",
							"    pm.response.to.have.body(\"This is the first responce from server!ss\");",
							"});",
							"",
							"    "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "abc123",
							"type": "string"
						},
						{
							"key": "key",
							"value": "api_key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url2}}/first",
					"host": [
						"{{url2}}"
					],
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Статус код 200",
							"pm.test(\"status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"// 2. Спарсить response body в json",
							"var jsonData = pm.response.json();",
							"// 3. Проверить, что name в ответе равно name s request (name вбить руками.)",
							"pm.test(\"check name\", function () {",
							"    pm.expect(jsonData.name).to.eql(\"Marharita\");",
							"});",
							"// 4. Проверить, что age в ответе равно age s request (age вбить руками.)",
							"pm.test(\"check age\", function () {",
							"    pm.expect(jsonData.age).to.eql(\"26\");",
							"});",
							"// 5. Проверить, что salary в ответе равно salary s request (salary вбить руками.)",
							"pm.test(\"check salary\", function () {",
							"    pm.expect(jsonData.salary).to.eql(500);",
							"});",
							"// 6. Спарсить request. ",
							"var bodyReq = request.data;   ",
							"// 7. Проверить, что name в ответе равно name s request (name забрать из request.)",
							"var nameReq = bodyReq.name;",
							"var nameRes = jsonData.name;",
							"pm.test(\"name в ответе равно name s request\", function () {",
							"    pm.expect(nameRes).to.eql(nameReq);",
							"});",
							"// 8. Проверить, что age в ответе равно age s request (age забрать из request.)",
							"var ageReq = bodyReq.age;",
							"var ageRes = jsonData.age;",
							"pm.test(\"age в ответе равно age s request\", function () {",
							"    pm.expect(ageRes).to.eql(ageReq);",
							"});",
							"// 9. Проверить, что salary в ответе равно salary s request (salary забрать из request.)",
							"var salaryReq = bodyReq.salary;",
							"var salaryRes = jsonData.salary;",
							"pm.test(\"salary в ответе равно salary s request\", function () {",
							"    pm.expect(salaryRes).to.eql(+salaryReq);",
							"});",
							"// 10. Вывести в консоль параметр family из response.",
							"var Family_res = jsonData.family;",
							"console.log(Family_res);",
							"// 11. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)",
							"var salary_x_4 = Family_res.u_salary_1_5_year;",
							"pm.test(\"u_salary_1_5_year в ответе равно salary*4 \", function () {",
							"  pm.expect(bodyReq.salary * 4).to.eql(salary_x_4);",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Marharita",
							"type": "text"
						},
						{
							"key": "age",
							"value": "26",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "500",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url2}}/user_info_3",
					"host": [
						"{{url2}}"
					],
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Отправить запрос",
							"pm.sendRequest(\"http://162.55.220.72:5009/object_info_3?name=Marharita&age=26&salary=500\", function (err, res) {",
							"    console.log();",
							"});",
							"// 2. Статус код 200",
							"pm.test(\"status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"// 3. Спарсить response body в json.",
							"var jsonData = pm.response.json();",
							"// 4. Спарсить request.",
							"var bodyReq = pm.request.url.query.toObject();",
							"// 5. Проверить, что name в ответе равно name s request (name забрать из request.)",
							"var nameReq = bodyReq.name;",
							"var nameRes = jsonData.name;",
							"pm.test(\"check name\", function () {",
							"    pm.expect(nameRes).to.eql(nameReq);",
							"});",
							"// 6. Проверить, что age в ответе равно age s request (age забрать из request.)",
							"var ageReq = bodyReq.age;",
							"var ageRes = jsonData.age;",
							"pm.test(\"check age\", function () {",
							"    pm.expect(ageRes).to.eql(ageReq);",
							"});",
							"// 7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)",
							"var salaryReq = bodyReq.salary;",
							"var salaryRes = jsonData.salary;",
							"pm.test(\"check salary\", function () {",
							"    pm.expect(salaryRes).to.eql(+salaryReq);",
							"});",
							"// 8. Вывести в консоль параметр family из response.",
							"console.log(jsonData.family);",
							"// 9. Проверить, что у параметра dog есть параметры name.",
							"pm.test(\"dog has property --> name\", function () {",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"name\");",
							"});",
							"// 10. Проверить, что у параметра dog есть параметры age.",
							"pm.test(\"dog has property --> age\", function () {",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"age\");",
							"});",
							"// 11. Проверить, что параметр name имеет значение Luky.",
							"pm.test(\"dog name has value --> Luky\", function () {",
							"    var pet_name = jsonData.family.pets.dog.name;",
							"    pm.expect(pet_name).to.contains(\"Luky\");",
							"});",
							"// 12.Проверить, что параметр age имеет значение 4.",
							"pm.test(\"dog name has value --> 4\", function () {",
							"    var pet_age = jsonData.family.pets.dog.age;",
							"    pm.expect(pet_age).to.eql(4);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url2}}/object_info_3?name=Marharita&age=26&salary=500",
					"host": [
						"{{url2}}"
					],
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Marharita"
						},
						{
							"key": "age",
							"value": "26"
						},
						{
							"key": "salary",
							"value": "500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Отправить запрос",
							"pm.sendRequest(\"http://162.55.220.72:5009/object_info_4?name=Marharita&age=26&salary=500\", function (err, res) {",
							"    console.log(pm.response.json());",
							"});",
							"// 2. Статус код 200",
							"pm.test(\"check that status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"// 3. Спарсить response body в json.",
							"var jsonData = pm.response.json();",
							"// 4. Спарсить request.",
							"var bodyReq = pm.request.url.query.toObject();",
							"// 5. Проверить, что name в ответе равно name s request (name забрать из request.)",
							"var nameReq = bodyReq.name;",
							"var nameRes = jsonData.name;",
							"pm.test(\"name в ответе равно name s request\", function () {",
							"    pm.expect(nameRes).to.eql(nameReq);",
							"});",
							"// 6. Проверить, что age в ответе равно age из request (age забрать из request.)",
							"var ageReq = bodyReq.age;",
							"var ageRes = jsonData.age;",
							"pm.test(\"что age в ответе равно age из request\", function () {",
							"    pm.expect(ageRes).to.eql(+ageReq);",
							"});",
							"// 7. Вывести в консоль параметр salary из request.",
							"console.log(bodyReq.salary);",
							"// 8. Вывести в консоль параметр salary из response.",
							"console.log(jsonData.salary);",
							"// 9. Вывести в консоль 0-й элемент параметра salary из response.",
							"console.log(jsonData.salary[0]);",
							"// 10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.",
							"console.log(jsonData.salary[1]);",
							"// 11.Вывести в консоль 2-й элемент параметра salary параметр salary из response.",
							"console.log(jsonData.salary[2]);",
							"// 12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)",
							"pm.test(\"0-й элемент параметра salary равен salary из request\", function () {",
							"    var salary_1_res = jsonData.salary[0];",
							"    var salary_1_req = bodyReq.salary;",
							"    pm.expect( salary_1_res).to.eql(+salary_1_req);",
							"});",
							"// 13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)",
							"pm.test(\"1-й элемент параметра salary равен salary*2 из request\", function () {",
							"    var salary_2_res = jsonData.salary[1];",
							"    var salary_2_req = +bodyReq.salary;",
							"    pm.expect(+salary_2_res).to.eql(+salary_2_req * 2);",
							"});",
							"// 14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)",
							"pm.test(\"1-й элемент параметра salary равен salary*2 из request\", function () {",
							"    var salary_3_res = jsonData.salary[2];",
							"    var salary_3_req = +bodyReq.salary;",
							"    pm.expect(+salary_3_res).to.eql(+salary_3_req * 3);",
							"});",
							"// 15. Создать в окружении переменную name",
							"pm.environment.set(\"name\", nameReq);",
							"// 16 . Создать в окружении переменную age",
							"pm.environment.set(\"age\", ageReq);",
							"// 17. Создать в окружении переменную salary",
							"var salaryReq = bodyReq.salary",
							"pm.environment.set(\"salary\", salaryReq);",
							"// 18. Передать в окружение переменную name",
							"// Marharita меняем на {{name}} в url",
							"// 19. Передать в окружение переменную age",
							"// 26 меняем на {{age}} в url",
							"// 20. Передать в окружение переменную salary",
							"// salary меняем на {{salary}} в url",
							"// 21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.",
							"var salaries = jsonData.salary;",
							"for (var all_my_salary = 0; all_my_salary < salaries.length; all_my_salary++) {",
							"    console.log(\"цикл который выведет в консоль по порядку элементы списка из параметра salary\", salaries[all_my_salary]);",
							"}",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url2}}/object_info_4?name={{name}}&age={{age}}&salary={{salary}}",
					"host": [
						"{{url2}}"
					],
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "{{name}}"
						},
						{
							"key": "age",
							"value": "{{age}}"
						},
						{
							"key": "salary",
							"value": "{{salary}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Вставить параметр salary из окружения в request",
							"// Body --> key: salary; value {{salary}}",
							"// 2. Вставить параметр age из окружения в age",
							"// Body --> key: age; value {{age}}",
							"// 3. Вставить параметр name из окружения в name",
							"// Body --> key: salary; value {{salary}}",
							"// 4. Отправить запрос.",
							"pm.sendRequest({",
							"    url: 'http://162.55.220.72:5009/user_info_2',",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'multipart/form-data',",
							"          },",
							"      body: {",
							"          mode: 'formdata',",
							"          formdata: [",
							"            {key: \"name\", value: \"Marharita\"},",
							"            {key: \"age\", value: 26 },",
							"            {key: \"salary\", value: 50}",
							"        ]",
							"      }",
							"},  function(err, response) {",
							"    if (err) {console.log(err);",
							"    return;}",
							"  console.log(response)",
							"});",
							"// 5. Статус код 200",
							"pm.test(\"status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"// 6. Спарсить response body в json.",
							"var jsonRes = pm.response.json();",
							"// 7. Спарсить request",
							"var jsonReq = request.data;",
							"// 8. Проверить, что json response имеет параметр start_qa_salary",
							"pm.test(\"json response имеет параметр start_qa_salary\", function () {",
							"    pm.expect(jsonRes).to.have.property(\"start_qa_salary\");",
							"});",
							"// 9. Проверить, что json response имеет параметр qa_salary_after_6_months",
							"pm.test(\"json response имеет параметр qa_salary_after_6_months\", function () {",
							"    pm.expect(jsonRes).to.have.property(\"qa_salary_after_6_months\");",
							"});",
							"// 10. Проверить, что json response имеет параметр qa_salary_after_12_months",
							"pm.test(\"json response имеет параметр qa_salary_after_12_months\", function () {",
							"    pm.expect(jsonRes).to.have.property(\"qa_salary_after_12_months\");",
							"});",
							"// 11. Проверить, что json response имеет параметр qa_salary_after_1.5_year",
							"pm.test(\"json response имеет параметр qa_salary_after_1.5_year\", function () {",
							"    pm.expect(jsonRes).to.have.property(\"qa_salary_after_1.5_year\");",
							"});",
							"// 12. Проверить, что json response имеет параметр qa_salary_after_3.5_years",
							"pm.test(\"json response имеет параметр qa_salary_after_3.5_years\", function () {",
							"    pm.expect(jsonRes).to.have.property(\"qa_salary_after_3.5_years\");",
							"});",
							"// 13. Проверить, что json response имеет параметр person",
							"pm.test(\"json response имеет параметр person\", function () {",
							"    pm.expect(jsonRes).to.have.property(\"person\");",
							"});",
							"// 14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)",
							"var salaryReq = +jsonReq.salary;",
							"var start_qa_salary_res = jsonRes.start_qa_salary;",
							"pm.test(\"параметр start_qa_salary равен salary из request (salary забрать из request\", function () {",
							"    pm.expect(salaryReq).to.eql(start_qa_salary_res);",
							"});",
							"// 15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)",
							"var salary_after_6m_res = +jsonRes.qa_salary_after_6_months;",
							"pm.test(\"параметр qa_salary_after_6_months равен salary*2 из request\", function () {",
							"    pm.expect(salaryReq * 2).to.eql(salary_after_6m_res);",
							"});",
							"// 16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)",
							"var salary_after_12m_res= +jsonRes.qa_salary_after_12_months;",
							"pm.test(\"параметр qa_salary_after_12_months равен salary*2.7 из request\", function () {",
							"    pm.expect(salaryReq * 2.7).to.eql(salary_after_12m_res);",
							"});",
							"// 17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)",
							"var salary_after_18m_res = jsonReq.salary;",
							"pm.test(\"параметр qa_salary_after_1.5_year равен salary*3.3 из request\", function () {",
							"    pm.expect(pm.response.json()[\"qa_salary_after_1.5_year\"]).to.eql(+salary_after_18m_res * 3.3);});",
							"//18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)",
							"console.log(jsonRes);",
							"var json_salary_after_42m = jsonReq.salary;",
							"pm.test(\"параметр qa_salary_after_3.5_years равен salary*3.8 из request\", function () {",
							"    pm.expect(pm.response.json()[\"qa_salary_after_3.5_years\"]).to.eql(+json_salary_after_42m * 3.8);});",
							"",
							"//19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)",
							"var u_name_salary_res = jsonRes.person.u_name[1];",
							"pm.test(\"в параметре person, 1-й элемент из u_name равен salary из request\", function () {",
							"    pm.expect(u_name_salary_res).to.eql(+jsonReq.salary);",
							"});",
							"",
							"//20. Проверить, что что параметр u_age равен age из request (age забрать из request.)",
							"var age_Req = jsonReq.age;",
							"var age_Res = jsonRes.person.u_age;",
							"pm.test(\"параметр u_age равен age из request\", function () {",
							"    pm.expect(+age_Req).to.eql(+age_Res);",
							"});",
							"//21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)",
							"var salary_Req = jsonReq.salary;",
							"var salary_after_5y_Res = +jsonRes.person.u_salary_5_years;",
							"pm.test(\"параметр u_salary_5_years равен salary*4.2 из request\", function () {",
							"    pm.expect(+salary_Req * 4.2).to.eql(salary_after_5y_Res);",
							"});",
							"//22. ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.",
							"// var jsonData = [\"u_age\", \"u_name\", \"u_salary_5_years\"];",
							"var about_person = jsonRes.person;",
							"for (var all_about_person = 0; all_about_person < about_person.length; all_about_person++) {",
							"console.log(\"цикл который выведет в консоль по порядку элементы списка из параметра person\", about_person[all_about_person]);",
							"}",
							"",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url2}}/user_info_2",
					"host": [
						"{{url2}}"
					],
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}